#! /usr/bin/env python

#
# eagle_parts
# Andy Bardagjy 7/13/2011
#
# EagleCAD parts manipulator
# Turns the exported partslist from EagleCad into a CSV 
# which has been arranged by parts of similar value and package 
# to facilitate ordering
#
# Usage eagle_parts [outputlist.csv] inputlist.txt
#   if output list is not specified, partslist.csv is written 
#

import sys
import os

outlist = ""
inlist = ""

# Parse the input arguments
if len(sys.argv) == 2:
    outlist = 'partslist.csv'
    inlist = sys.argv[1]
elif len(sys.argv) == 3:
    outlist = sys.argv[1]
    inlist = sys.argv[2]
else:
    print "Incorrect syntax, eagle_parts [outputlist.csv] inputlist.txt"
    sys.exit(2)

# Read in the file
ff = open(inlist, 'r')
lines = ff.readlines()

# In EAGLE files the column headings are on line 7 (v4 and v5)
headings = lines[6].split()
headinds = [0] # Indexes of the headings

for head in headings[1:]:
    headinds.append(lines[6].find(head))

headinds.append(-1)

# For each line, get the elements 
outp = []
tpart = []

line = ""
for line in lines[8:]:
    for index in range(len(headinds)-1):
        tele = line[headinds[index]:headinds[index+1]].strip()
        tpart.append(tele)
    outp.append(tpart)
    tpart=[]

# Find and count the unique parts
out = []
tpart = []
blist = []

for I, L in enumerate(outp):
    if I not in blist:
        tpart.append('1')
        tpart.append(L[headings.index("Value")])
        tpart.append(L[headings.index("Package")])
        tpart.append(L[headings.index("Part")])
        blist.append(I)
        out.append(tpart)
        for J, L2 in enumerate(outp):
            if J not in blist:
                if L2[headings.index("Value")] == tpart[1]:
                    if L2[headings.index("Package")] == tpart[2]:
                        tpart[0] = str(int(tpart[0]) + 1)
                        tpart[3] = tpart[3] + ' ' + L2[headings.index("Part")]
                        blist.append(J)
    tpart = []

# Format for Digikey: Quant, DK# (empty), Internal (Value, Package Part)
csvo = "Quantity, Digikey #, Internal #\n"
for line in out:
    csvo = csvo + line[0]+', ,'+line[1]+' '+line[2]+' '+line[3]+'\n'

# print list
ol = open(outlist, 'w')
ol.write(csvo)
ol.close()
